<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tairanchina.teval.common.dao.AccountDao">
    <sql id="Fields">
        ${separator}id,
        ${separator}created_time,
        ${separator}updated_time,
        ${separator}created_by,
        ${separator}updated_by,
        ${separator}status,
        ${separator}remark,
        ${separator}account_secret,
        ${separator}name,
        ${separator}avatar,
        ${separator}description,
        ${separator}type,
        ${separator}domain
    </sql>
    <resultMap id="BaseResultMap" type="com.tairanchina.teval.common.domain.core.account.Account" extends="com.tairanchina.teval.common.dao.BaseDao.BaseResultMap">
        <result column="status" property="status" jdbcType="VARCHAR" typeHandler="com.tairanchina.teval.common.service.typehandler.EnumHandlerType"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="account_secret" property="accountSecret" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR" javaType="com.tairanchina.teval.common.domain.core.account.Account$AccountType" typeHandler="org.apache.ibatis.type.EnumTypeHandler"/>
        <result column="domain" property="domain" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="ExtResultMap" type="com.tairanchina.teval.common.domain.core.ext.entity.AccountExt" extends="BaseResultMap">
        <association property="identity" resultMap="com.tairanchina.teval.common.dao.AccountIdentDao.BaseResultMap" columnPrefix="identT_" />
    </resultMap>

    <sql id="PrefixSelectSql">
        SELECT
        <include refid="Fields">
            <property name="separator" value="t."/>
        </include>
        FROM
        t_account t
    </sql>
    <sql id="PrefixWhere">
        where t.status != "INVALID"
    </sql>
    <sql id="ByPrimaryKey">
        AND t.id = #{pk,jdbcType=VARCHAR}
    </sql>
    <sql id="ByObjectCondition">

            <if test="_.id != null">
                AND ${separator}id = #{_.id,jdbcType=VARCHAR}
            </if>
            <if test="_.createdTime != null">
                AND ${separator}created_time = #{_.createdTime,jdbcType=TIMESTAMP}
            </if>
            <if test="_.updatedTime != null">
                AND ${separator}updated_time = #{_.updatedTime,jdbcType=TIMESTAMP}
            </if>
            <if test="_.createdBy != null">
                AND ${separator}created_by = #{_.createdBy,jdbcType=VARCHAR}
            </if>
            <if test="_.updatedBy != null">
                AND ${separator}updated_by = #{_.updatedBy,jdbcType=VARCHAR}
            </if>
            <if test="_.status != null">
                AND ${separator}status= #{_.status,jdbcType=VARCHAR}
            </if>
            <if test="_.remark != null">
                AND ${separator}remark= #{_.remark,jdbcType=VARCHAR}
            </if>
            <if test="_.accountSecret != null">
                AND ${separator}account_secret= #{_.accountSecret,jdbcType=VARCHAR}
            </if>
            <if test="_.name != null">
                AND ${separator}name= #{_.name,jdbcType=VARCHAR}
            </if>
            <if test="_.avatar != null">
                AND ${separator}avatar= #{_.avatar,jdbcType=VARCHAR}
            </if>
            <if test="_.description != null">
                AND ${separator}description= #{_.description,jdbcType=VARCHAR}
            </if>
            <if test="_.type != null">
                AND ${separator}type= #{_.type,jdbcType=VARCHAR}
            </if>
            <if test="_.domain != null">
                AND ${separator}domain= #{_.domain,jdbcType=VARCHAR}
            </if>

    </sql>
    <select id="getByPrimaryKey" resultMap="BaseResultMap">
        <include refid="PrefixSelectSql"/>
        <include refid="PrefixWhere"/>
        <include refid="ByPrimaryKey"/>
    </select>

    <select id="findByCondition" resultMap="BaseResultMap">
        <include refid="PrefixSelectSql"/>
        <include refid="PrefixWhere"/>
        <include refid="ByObjectCondition">
            <property name="separator" value="t."/>
        </include>
    </select>
    <insert id="insert" parameterType="com.tairanchina.teval.common.domain.core.account.Account" useGeneratedKeys="true" keyProperty="id">
        insert into t_account (
            id,
            created_time,
            updated_time,
            created_by,
            updated_by,
            status,
            remark,
            account_secret,
            name,
            avatar,
            description,
            type,domain
        ) values (
            #{id},
            now(),now(),
            #{createdBy,jdbcType=VARCHAR},
            #{updatedBy,jdbcType=VARCHAR},
            #{status,javaType=com.tairanchina.teval.common.domain.base.EntityObject$Status,typeHandler=com.tairanchina.teval.common.service.typehandler.EnumHandlerType},
            #{remark,jdbcType=VARCHAR},
            #{accountSecret,jdbcType=VARCHAR},
            #{name,jdbcType=VARCHAR},
            #{avatar,jdbcType=VARCHAR},
            #{description,jdbcType=VARCHAR},
            #{type,jdbcType=VARCHAR,javaType=com.tairanchina.teval.common.domain.core.account.Account$AccountType,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
            #{domain,jdbcType=VARCHAR}
        ) on duplicate key update
            updated_by = #{updatedBy,jdbcType=VARCHAR},
            updated_time = now()
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.tairanchina.teval.common.domain.core.account.Account">
        update t_account t set t.id=t.id
        <if test="_.updatedBy != null">
           ,t.updated_by = #{_.updatedBy,jdbcType=VARCHAR}
        </if>
        <if test="_.status != null">
           ,t.status = #{_.status,javaType=com.tairanchina.teval.common.domain.base.EntityObject$Status,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
        </if>
        <if test="_.remark != null">
           ,t.remark = #{_.remark,jdbcType=VARCHAR}
        </if>
        <if test="_.accountSecret != null">
           ,t.account_secret = #{_.accountSecret,jdbcType=VARCHAR}
        </if>
        <if test="_.name != null">
           ,t.name = #{_.name,jdbcType=VARCHAR}
        </if>
        <if test="_.avatar != null">
           ,t.avatar = #{_.avatar,jdbcType=VARCHAR}
        </if>
        <if test="_.description != null">
           ,t.description = #{_.description,jdbcType=VARCHAR}
        </if>
        <if test="_.description != null">
           ,t.type = #{_.type,jdbcType=VARCHAR,javaType=com.tairanchina.teval.common.domain.core.account.Account$AccountType,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
        </if>
        <if test="_.domain != null">
           ,t.description = #{_.description,jdbcType=VARCHAR}
        </if>
           ,t.updated_time = now()
        where t.id = #{pk,jdbcType=VARCHAR}
    </update>

    <delete id="deleteByPrimaryKey">
        update t_account set status = "INVALID" where id = #{pk,typeHandler=com.tairanchina.teval.common.service.typehandler.IDTypehandler}
    </delete>


    <sql id="ExtSelectFieldSql">
        <if test="ext.extAccountIdentity">
            <include refid="com.tairanchina.teval.common.dao.BaseDao.extAccountIdentityField">
                <property name="accountIdentityTableAlias" value="ident"/>
            </include>
        </if>
    </sql>
    <sql id="ExtSelectLeftJoinSql">
        <if test="ext.extAccountIdentity">
            LEFT JOIN t_account_ident ident ON t.id = ident.created_by
        </if>
    </sql>
    <sql id="ExtPrefixSelectSql">
        SELECT
        <include refid="Fields">
            <property name="separator" value="t."/>
        </include>
        <include refid="ExtSelectFieldSql"/>
        FROM
        t_account t
        <include refid="ExtSelectLeftJoinSql"/>
    </sql>
    <sql id="ExtWhereConditionSql">
        <if test="c.accountFuzzyMatch != null and c.accountFuzzyMatch != ''">
            AND (
            t.account_secret LIKE "%"#{c.accountFuzzyMatch,jdbcType=VARCHAR}"%"
            OR
            t.name LIKE "%"#{c.accountFuzzyMatch,jdbcType=VARCHAR}"%"
            OR
            t.remark LIKE "%"#{c.accountFuzzyMatch,jdbcType=VARCHAR}"%"
            )
        </if>
        <if test="c.accountStatusList != null">
            <if test="c.accountStatusList.size == 1">
                AND t.`status` =
                <foreach item="item" index="index" collection="c.accountStatusList">
                    #{item,jdbcType=VARCHAR,javaType=com.tairanchina.teval.common.domain.base.EntityObject$Status,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </foreach>
            </if>
            <if test="c.accountStatusList.size > 1">
                AND
                t.`status` in
                <foreach item="item" index="index" collection="c.accountStatusList" open="(" separator="," close=")">
                    #{item,jdbcType=VARCHAR,javaType=com.tairanchina.teval.common.domain.base.EntityObject$Status,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </foreach>
            </if>
        </if>
        <if test="c.effectStatus != null">
            <if test="c.effectStatus == 0">
                AND t.from_date &gt; now()
            </if>
            <if test="c.effectStatus == 1">
                AND (
                t.from_date &lt; now() and
                (
                (t.thru_date IS NOT NULL and t.thru_date &gt; now())
                or
                t.thru_date IS NULL
                )
                )
            </if>
            <if test="c.effectStatus == 2">
                AND (t.thru_date IS NOT NULL and t.thru_date &lt; now())
            </if>
        </if>
        ${extraSQL}
    </sql>

    <select id="findExtByCondition" resultMap="ExtResultMap">
        <include refid="ExtPrefixSelectSql"/>
        <include refid="PrefixWhere"/>
        <include refid="ByObjectCondition">
            <property name="separator" value="t."/>
        </include>
        <include refid="ExtWhereConditionSql"/>
    </select>
</mapper>